alias Node = func;

BuildNode::[int data, Node lc_, Node rc_]{
  (data > (lc_ value) || data > (rc_ value)) -> {
    int tmp = (max (lc_ value), (rc_ value));
    if (lc_ value) > (rc_ value) {
      ((lc_ set-value) data);
      data = tmp;
    } else {
      ((rc_ set-value) data);
      data = tmp;
    }
  }
  Dispatch::[string descriptor]{
    switch descriptor{
      "value" : {data;}
      "set-lc" : {::[lc]{lc_=lc};}
      "set-rc" : {::[rc]{rc_=rc};}
      "set-value" : {::[x]{data = x;};}
    }
  }
}

int n = 10;
node[1] = (BuildNode n - 1, null, null);
for i = 2 , i <= n , i = i + 1 {
  node[i] = (BuildNode n - i, null, null);
  if i % 2 == 0 {
    ((node[i/2] set-lc) node[i]);
  }
  else {
    ((node[i/2] set-rc) node[i]);
  }
}
